package com.igorion.mqtt;

import java.io.ByteArrayOutputStream;

import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.paho.client.mqttv3.MqttSecurityException;
import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.igorion.mqtt.types.message.JsonTypeImplBsecProfile;

public class MqttPublisherPahoBme {

    public static final String MQTT_HOST = "tcp://192.168.0.115:1883";
    public static final String MQTT_CLID = "bme_backend";

    @SuppressWarnings("resource")
    public static void main(String[] args) throws Exception {

        MqttClient client = new MqttClient(MQTT_HOST, MQTT_CLID, new MemoryPersistence());
        MqttConnectOptions options = new MqttConnectOptions();
        options.setHttpsHostnameVerificationEnabled(false);

        client.setCallback(new MqttCallback() {

            @Override
            public void connectionLost(Throwable cause) {
                System.out.println("connectionLost: " + cause.getMessage());
            }

            @Override
            public void messageArrived(String topic, MqttMessage message) {

                System.out.println("--> " + topic); // i.e. moth__73/CO2
                System.out.println("Qos: " + message.getQos()); // i.e. 0
                System.out.println("message content: " + new String(message.getPayload()));

            }

            @Override
            public void deliveryComplete(IMqttDeliveryToken token) {
                System.out.println("deliveryComplete --> " + token.isComplete());
            }

        });

        connect(client, options);

        boolean sendData = false;
        if (sendData) {

            JsonTypeImplBsecProfile bsecProfile = new JsonTypeImplBsecProfile();
            bsecProfile.name = "air_og";
            bsecProfile.gasName1 = "air";
            bsecProfile.gasName2 = "og";
            bsecProfile.gasName3 = "";
            bsecProfile.gasName4 = "";
            ByteArrayOutputStream baosDefs = new ByteArrayOutputStream();
            new ObjectMapper().writeValue(baosDefs, bsecProfile);
            client.publish("bsecDefs", baosDefs.toByteArray(), 0, true);

            int[] data = { 0, 0, 4, 2, 189, 1, 0, 0, 0, 0, 0, 0, 158, 7, 0, 0, 176, 0, 1, 0, 0, 168, 19, 73, 64, 49, 119, 76, 0, 192, 40, 72, 0, 192, 40, 72, 137, 65, 0, 191, 205, 204, 204, 190, 0, 0, 64, 191, 225, 122,
                        148, 190, 10, 0, 3, 0, 0, 0, 96, 64, 23, 183, 209, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 204, 204, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 82, 73, 157, 188, 95, 41, 203, 61, 118, 224, 108, 63, 155, 230, 125, 63, 191, 14,
                        124, 63, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 32, 66, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 160, 65, 8, 0, 2, 0, 236, 81, 133, 66, 16, 0, 3, 0, 10, 215, 163, 60, 10, 215,
                        35, 59, 10, 215, 35, 59, 13, 0, 5, 0, 0, 0, 0, 0, 100, 254, 131, 137, 87, 88, 0, 9, 0, 7, 240, 150, 61, 0, 0, 0, 0, 0, 0, 0, 0, 28, 124, 225, 61, 52, 128, 215, 63, 0, 0, 160, 64, 0, 0, 0, 0, 0, 0,
                        0, 0, 205, 204, 12, 62, 103, 213, 39, 62, 230, 63, 76, 192, 0, 0, 0, 0, 0, 0, 0, 0, 145, 237, 60, 191, 251, 58, 64, 63, 177, 80, 131, 64, 0, 0, 0, 0, 0, 0, 0, 0, 93, 254, 227, 62, 54, 60, 133,
                        191, 0, 0, 64, 64, 12, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 5, 11, 0, 0, 0, 2, 84, 51, 51, 62, 213, 112, 31, 62, 140, 238, 217, 60, 186, 53, 216, 189, 246, 133, 78, 62, 80, 226, 35, 62, 216, 228,
                        155, 189, 131, 91, 207, 61, 166, 192, 22, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 43, 254, 61,
                        57, 43, 254, 189, 0, 0, 0, 0, 0, 0, 0, 0, 116, 95, 196, 189, 185, 176, 212, 60, 4, 44, 77, 190, 50, 171, 45, 61, 54, 37, 197, 190, 133, 238, 73, 189, 186, 238, 49, 62, 122, 179, 16, 61, 118, 32,
                        151, 62, 0, 0, 0, 0, 31, 246, 153, 61, 67, 2, 62, 189, 36, 63, 211, 187, 246, 48, 119, 190, 121, 58, 37, 190, 154, 7, 184, 62, 137, 52, 13, 62, 167, 177, 232, 188, 237, 117, 29, 190, 0, 0, 0, 0,
                        108, 3, 68, 190, 156, 1, 133, 62, 12, 118, 216, 62, 48, 162, 22, 191, 158, 204, 4, 63, 234, 138, 174, 188, 27, 113, 5, 191, 21, 5, 90, 62, 247, 59, 105, 62, 0, 0, 0, 0, 56, 61, 218, 190, 62, 131,
                        112, 62, 225, 224, 108, 62, 169, 147, 215, 189, 119, 17, 233, 62, 49, 252, 62, 190, 165, 70, 164, 62, 38, 175, 147, 190, 75, 81, 131, 62, 0, 0, 0, 0, 40, 187, 155, 190, 53, 2, 7, 60, 34, 101, 124,
                        189, 177, 156, 171, 188, 53, 19, 171, 189, 255, 115, 227, 190, 225, 32, 18, 62, 127, 41, 196, 190, 65, 104, 180, 189, 0, 0, 0, 0, 5, 170, 12, 191, 38, 229, 169, 189, 106, 234, 12, 62, 246, 74, 53,
                        190, 46, 70, 181, 62, 40, 145, 60, 190, 229, 205, 175, 60, 223, 154, 135, 190, 81, 41, 9, 63, 0, 0, 0, 0, 99, 190, 184, 189, 72, 139, 99, 61, 52, 255, 131, 190, 140, 200, 162, 61, 100, 238, 61,
                        62, 3, 251, 19, 191, 84, 60, 69, 190, 67, 56, 220, 189, 131, 253, 214, 188, 0, 0, 0, 0, 249, 23, 37, 191, 84, 199, 176, 62, 204, 196, 137, 59, 87, 46, 217, 62, 29, 89, 150, 61, 50, 86, 10, 190,
                        12, 116, 73, 62, 164, 150, 94, 190, 80, 216, 146, 190, 0, 0, 0, 0, 188, 127, 154, 190, 186, 15, 243, 62, 13, 158, 162, 61, 236, 63, 19, 62, 76, 36, 159, 62, 40, 139, 48, 191, 214, 17, 114, 190,
                        150, 126, 242, 190, 80, 152, 18, 63, 0, 0, 0, 0, 14, 65, 240, 190, 159, 88, 85, 62, 12, 242, 94, 62, 204, 169, 250, 62, 89, 24, 5, 63, 165, 120, 12, 191, 121, 249, 217, 186, 247, 225, 40, 191, 94,
                        131, 66, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 202, 121, 48, 191, 5, 3, 205, 190, 0, 0, 0, 0, 0, 0, 0, 0, 29, 30, 232, 188, 78, 39, 77, 191, 0, 0, 0, 0, 0, 0, 0, 0, 164, 208, 156, 62, 190,
                        50, 201, 190, 0, 0, 0, 0, 0, 0, 0, 0, 169, 195, 251, 190, 169, 65, 92, 62, 0, 0, 0, 0, 0, 0, 0, 0, 120, 49, 126, 62, 171, 157, 188, 190, 0, 0, 0, 0, 0, 0, 0, 0, 14, 16, 42, 190, 161, 221, 40, 62,
                        0, 0, 0, 0, 0, 0, 0, 0, 159, 63, 152, 61, 122, 228, 84, 62, 0, 0, 0, 0, 0, 0, 0, 0, 10, 232, 40, 191, 143, 8, 71, 63, 0, 0, 0, 0, 0, 0, 0, 0, 187, 12, 97, 62, 211, 225, 244, 190, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 20, 28, 235, 74, 171, 127, 138, 73, 56, 117, 155, 72, 222, 99, 169, 72, 230, 247, 29, 72, 222, 239, 133, 72, 28, 238, 22, 73, 104,
                        163, 254, 73, 53, 132, 41, 75, 148, 140, 106, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 66, 151, 74, 56, 240, 29, 73, 211, 172, 29, 72, 105, 250, 42, 72, 137, 154, 135, 71, 203, 15, 235, 71,
                        160, 196, 157, 72, 49, 233, 148, 73, 215, 116, 215, 74, 106, 251, 29, 76, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 0, 88, 1, 254, 0, 2, 1, 5, 48, 117, 100, 0, 44, 1, 112, 23, 151, 7,
                        132, 3, 197, 0, 92, 4, 144, 1, 64, 1, 64, 1, 144, 1, 48, 117, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 48, 117, 48, 117, 8, 7, 8, 7, 8, 7, 8,
                        7, 8, 7, 100, 0, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 100, 0, 100, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 44, 1, 44, 1, 44, 1,
                        44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 8, 7, 8, 7, 8, 7, 8, 7, 112, 23,
                        112, 23, 112, 23, 112, 23, 112, 23, 112, 23, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 255, 255, 255, 255, 220,
                        5, 220, 5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 220, 5, 220, 5, 220, 5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 48, 117, 0, 1, 0, 24, 0, 2, 0, 22, 0, 2, 0, 22, 0, 24, 0, 24, 0, 24, 0, 24, 0, 24, 0, 210, 0, 24, 1, 24, 1, 94, 1, 94, 1, 24, 1,
                        210, 0, 140, 0, 70, 0, 140, 0, 10, 1, 0, 0, 0, 0, 241, 188, 0, 0 };

            ByteArrayOutputStream baosData = new ByteArrayOutputStream();
            for (int i = 0; i < data.length; i++) {
                baosData.write((byte) data[i]);
            }
            client.publish("bsecData", baosData.toByteArray(), 0, true);

        } else {
            client.publish("bsecDefs", new byte[0], 0, true);
            client.publish("bsecData", new byte[0], 0, true);
        }

    }

    public static void connect(MqttClient client, MqttConnectOptions options) throws MqttSecurityException, MqttException {
        System.out.print("connecting ...");
        client.connect(options);
        System.out.println(" done");
    }

}
