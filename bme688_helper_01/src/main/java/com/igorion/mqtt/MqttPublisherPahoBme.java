package com.igorion.mqtt;

import java.io.ByteArrayOutputStream;

import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.paho.client.mqttv3.MqttSecurityException;
import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.igorion.mqtt.types.message.JsonTypeImplBsecProfile;

public class MqttPublisherPahoBme {

    public static final String MQTT_HOST = "tcp://192.168.0.115:1883";
    public static final String MQTT_CLID = "bme_backend";

    @SuppressWarnings("resource")
    public static void main(String[] args) throws Exception {

        MqttClient client = new MqttClient(MQTT_HOST, MQTT_CLID, new MemoryPersistence());
        MqttConnectOptions options = new MqttConnectOptions();
        options.setHttpsHostnameVerificationEnabled(false);

        client.setCallback(new MqttCallback() {

            @Override
            public void connectionLost(Throwable cause) {
                System.out.println("connectionLost: " + cause.getMessage());
            }

            @Override
            public void messageArrived(String topic, MqttMessage message) {

                System.out.println("--> " + topic); // i.e. moth__73/CO2
                System.out.println("Qos: " + message.getQos()); // i.e. 0
                System.out.println("message content: " + new String(message.getPayload()));

            }

            @Override
            public void deliveryComplete(IMqttDeliveryToken token) {
                System.out.println("deliveryComplete --> " + token.isComplete());
            }

        });

        connect(client, options);

        boolean sendData = false;
        if (sendData) {

            JsonTypeImplBsecProfile bsecProfile = new JsonTypeImplBsecProfile();
            bsecProfile.name = "air-cof";
            bsecProfile.gasName1 = "air";
            bsecProfile.gasName2 = "cof";
            bsecProfile.gasName3 = "";
            bsecProfile.gasName4 = "";
            ByteArrayOutputStream baosDefs = new ByteArrayOutputStream();
            new ObjectMapper().writeValue(baosDefs, bsecProfile);
            client.publish("bsecDefs", baosDefs.toByteArray(), 0, true);

            int[] data = { 0, 0, 4, 2, 189, 1, 0, 0, 0, 0, 0, 0, 158, 7, 0, 0, 176, 0, 1, 0, 0, 168, 19, 73, 64, 49, 119, 76, 0, 192, 40, 72, 0, 192, 40, 72, 137, 65, 0, 191, 205, 204, 204, 190, 0, 0, 64, 191, 225, 122,
                        148, 190, 10, 0, 3, 0, 0, 0, 96, 64, 23, 183, 209, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 205, 204, 204, 189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 128, 63, 82, 73, 157, 188, 95, 41, 203, 61, 118, 224, 108, 63, 155, 230, 125, 63, 191, 14,
                        124, 63, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 32, 66, 0, 0, 160, 65, 0, 0, 32, 66, 0, 0, 160, 65, 8, 0, 2, 0, 236, 81, 133, 66, 16, 0, 3, 0, 10, 215, 163, 60, 10, 215,
                        35, 59, 10, 215, 35, 59, 13, 0, 5, 0, 0, 0, 0, 0, 100, 254, 131, 137, 87, 88, 0, 9, 0, 7, 240, 150, 61, 0, 0, 0, 0, 0, 0, 0, 0, 28, 124, 225, 61, 52, 128, 215, 63, 0, 0, 160, 64, 0, 0, 0, 0, 0, 0,
                        0, 0, 205, 204, 12, 62, 103, 213, 39, 62, 230, 63, 76, 192, 0, 0, 0, 0, 0, 0, 0, 0, 145, 237, 60, 191, 251, 58, 64, 63, 177, 80, 131, 64, 0, 0, 0, 0, 0, 0, 0, 0, 93, 254, 227, 62, 54, 60, 133,
                        191, 0, 0, 64, 64, 12, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 5, 11, 0, 0, 0, 2, 110, 13, 16, 61, 209, 73, 182, 61, 43, 131, 52, 62, 45, 6, 146, 189, 76, 40, 1, 62, 161, 167, 227, 61, 124, 3, 84,
                        189, 42, 251, 223, 58, 78, 94, 180, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 206, 131, 61, 18,
                        206, 131, 189, 0, 0, 0, 0, 0, 0, 0, 0, 96, 195, 185, 189, 14, 98, 123, 190, 48, 224, 30, 190, 30, 48, 164, 189, 91, 243, 20, 62, 115, 154, 129, 189, 68, 60, 126, 189, 27, 144, 37, 62, 21, 149, 95,
                        62, 0, 0, 0, 0, 225, 112, 162, 190, 49, 211, 165, 62, 137, 66, 222, 190, 196, 253, 192, 62, 47, 68, 45, 61, 222, 38, 117, 190, 197, 56, 40, 63, 65, 70, 123, 62, 205, 144, 157, 62, 0, 0, 0, 0, 132,
                        49, 251, 190, 64, 91, 80, 190, 120, 187, 166, 61, 225, 184, 59, 190, 137, 153, 242, 62, 12, 242, 77, 189, 207, 175, 133, 190, 124, 23, 5, 63, 12, 184, 113, 62, 0, 0, 0, 0, 234, 249, 238, 190, 231,
                        194, 255, 61, 245, 206, 180, 190, 151, 69, 167, 190, 217, 209, 33, 63, 209, 243, 183, 61, 221, 16, 166, 190, 226, 243, 147, 62, 200, 216, 159, 189, 0, 0, 0, 0, 198, 28, 1, 191, 96, 232, 10, 190,
                        90, 20, 197, 189, 47, 206, 143, 190, 162, 89, 51, 190, 158, 120, 219, 189, 93, 40, 84, 62, 238, 63, 206, 188, 168, 169, 159, 62, 0, 0, 0, 0, 254, 184, 106, 190, 26, 13, 41, 191, 48, 248, 165, 190,
                        104, 75, 26, 62, 0, 116, 25, 62, 142, 164, 96, 190, 162, 142, 149, 61, 105, 124, 170, 190, 237, 5, 224, 62, 0, 0, 0, 0, 61, 67, 202, 62, 91, 206, 250, 62, 90, 11, 198, 190, 242, 119, 51, 62, 9,
                        56, 39, 63, 119, 115, 177, 190, 200, 244, 182, 190, 125, 149, 126, 190, 173, 23, 253, 186, 0, 0, 0, 0, 26, 53, 237, 60, 21, 83, 133, 190, 76, 150, 8, 190, 83, 205, 211, 62, 182, 153, 154, 62, 165,
                        149, 106, 190, 226, 135, 222, 59, 180, 226, 217, 189, 193, 159, 239, 62, 0, 0, 0, 0, 56, 255, 250, 190, 61, 46, 47, 189, 149, 158, 218, 190, 155, 3, 137, 190, 20, 139, 16, 63, 54, 132, 224, 189,
                        46, 4, 182, 62, 69, 225, 229, 190, 253, 88, 232, 62, 0, 0, 0, 0, 243, 98, 13, 191, 56, 135, 185, 190, 194, 249, 53, 189, 205, 164, 16, 61, 52, 10, 218, 61, 175, 237, 245, 190, 147, 156, 134, 190,
                        133, 104, 5, 191, 70, 63, 246, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 232, 209, 34, 62, 97, 116, 143, 62, 0, 0, 0, 0, 0, 0, 0, 0, 148, 143, 204, 190, 187, 34, 83, 63, 0, 0, 0, 0, 0, 0, 0, 0,
                        82, 128, 155, 61, 25, 66, 188, 62, 0, 0, 0, 0, 0, 0, 0, 0, 190, 92, 41, 191, 174, 235, 65, 63, 0, 0, 0, 0, 0, 0, 0, 0, 22, 21, 17, 190, 114, 138, 63, 191, 0, 0, 0, 0, 0, 0, 0, 0, 19, 94, 15, 191,
                        4, 81, 125, 60, 0, 0, 0, 0, 0, 0, 0, 0, 122, 202, 111, 61, 21, 157, 23, 191, 0, 0, 0, 0, 0, 0, 0, 0, 109, 172, 68, 190, 147, 179, 194, 62, 0, 0, 0, 0, 0, 0, 0, 0, 255, 133, 202, 62, 221, 193, 107,
                        62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 57, 156, 4, 72, 193, 150, 130, 75, 183, 81, 115, 75, 250, 81, 101, 75, 169, 147, 130, 73, 11, 240, 126, 73,
                        250, 222, 120, 73, 24, 4, 240, 71, 148, 20, 251, 71, 254, 135, 1, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 44, 206, 71, 204, 24, 128, 75, 172, 44, 112, 75, 42, 45, 100, 75, 28, 15, 115, 73,
                        204, 156, 109, 73, 238, 61, 104, 73, 133, 23, 191, 71, 50, 191, 197, 71, 67, 113, 202, 71, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 0, 88, 1, 254, 0, 2, 1, 5, 48, 117, 100, 0, 44, 1,
                        112, 23, 151, 7, 132, 3, 197, 0, 92, 4, 144, 1, 64, 1, 64, 1, 144, 1, 48, 117, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 48, 117, 48, 117, 8, 7,
                        8, 7, 8, 7, 8, 7, 8, 7, 100, 0, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 100, 0, 100, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 44,
                        1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 8, 7, 8, 7, 8,
                        7, 8, 7, 112, 23, 112, 23, 112, 23, 112, 23, 112, 23, 112, 23, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 255,
                        255, 255, 255, 220, 5, 220, 5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 220, 5, 220, 5, 220, 5, 255, 255, 255, 255, 255, 255,
                        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 48, 117, 0, 1, 0, 5, 0, 2, 0, 10, 0, 30, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 64, 1, 100, 0, 100, 0, 100, 0,
                        200, 0, 200, 0, 200, 0, 64, 1, 64, 1, 64, 1, 10, 1, 0, 0, 0, 0, 222, 184, 0, 0 };

            ByteArrayOutputStream baosData = new ByteArrayOutputStream();
            for (int i = 0; i < data.length; i++) {
                baosData.write((byte) data[i]);
            }
            client.publish("bsecData", baosData.toByteArray(), 0, true);

        } else {
            client.publish("bsecDefs", new byte[0], 0, true);
            client.publish("bsecData", new byte[0], 0, true);
        }

    }

    public static void connect(MqttClient client, MqttConnectOptions options) throws MqttSecurityException, MqttException {
        System.out.print("connecting ...");
        client.connect(options);
        System.out.println(" done");
    }

}
